     1                                  bits 32 
     2                                  global start        
     3                                  
     4                                  extern exit               
     5                                  import exit msvcrt.dll    
     6                                            
     7                                  ;x-(a*b*25+c*3)/(a+b)+e; a,b,c-byte; e-doubleword
     8                                  segment data use32 class=data
     9                                      ; ...
    10 00000000 0A                          a db 0ah
    11 00000001 19                          b db 19h
    12 00000002 0F                          c db 0Fh
    13 00000003 FFFF0000                    e dd 0FF_FFh
    14 00000007 844512FA00000000            x dq 0FA124584h
    15                                      
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 B800000000                      mov eax,0
    19 00000005 BB00000000                      mov ebx,0
    20 0000000A B900000000                      mov ecx,0
    21 0000000F BA00000000                      mov edx,0
    22                                          
    23 00000014 A0[00000000]                    mov al,[a]
    24 00000019 6698                            cbw
    25 0000001B 6689C3                          mov bx,ax
    26 0000001E 66B80000                        mov ax,0
    27 00000022 A0[01000000]                    mov al,[b]
    28 00000027 6698                            cbw
    29 00000029 6601C3                          add bx,ax
    30 0000002C 66B80000                        mov ax,0
    31                                          ;bx<-a+b
    32                                          
    33 00000030 A0[02000000]                    mov al,[c]
    34 00000035 B404                            mov ah,4
    35 00000037 F6EC                            imul ah
    36 00000039 6689C1                          mov cx,ax
    37                                          ;cx<-c*3
    38                                          
    39 0000003C A0[00000000]                    mov al,[a]
    40 00000041 F62D[01000000]                  imul byte[b]
    41 00000047 66BA1900                        mov dx,25d
    42 0000004B 66F7EA                          imul dx
    43                                          ;dx:ax<-a*b*25
    44                                          
    45 0000004E F8                              clc
    46 0000004F 6601C8                          add ax,cx
    47 00000052 6683D200                        adc dx,0
    48                                          ;dx:ax<-a*b*25+c*3
    49                                          
    50 00000056 66F7FB                          idiv bx 
    51 00000059 98                              cwde
    52 0000005A 99                              cdq
    53                                          ;edx:eax<-(a*b*25+c*3)/(a+b)
    54                                          
    55 0000005B 8B0D[0B000000]                  mov ecx,[x+4]
    56 00000061 8B1D[07000000]                  mov ebx,[x]
    57                                          
    58 00000067 F8                              clc
    59 00000068 29C3                            sub ebx,eax
    60 0000006A 19D1                            sbb ecx,edx
    61                                          
    62 0000006C A1[03000000]                    mov eax,[e] 
    63 00000071 F8                              clc
    64 00000072 01C3                            add ebx,eax
    65 00000074 83C100                          add ecx,0
    66                                          
    67                                          ;rezult  is is ecx:ebx
    68                                          
    69                                          
    70 00000077 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    71 00000079 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
